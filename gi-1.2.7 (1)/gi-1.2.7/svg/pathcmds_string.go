// Code generated by "stringer -type=PathCmds"; DO NOT EDIT.

package svg

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PcM-0]
	_ = x[Pcm-1]
	_ = x[PcL-2]
	_ = x[Pcl-3]
	_ = x[PcH-4]
	_ = x[Pch-5]
	_ = x[PcV-6]
	_ = x[Pcv-7]
	_ = x[PcC-8]
	_ = x[Pcc-9]
	_ = x[PcS-10]
	_ = x[Pcs-11]
	_ = x[PcQ-12]
	_ = x[Pcq-13]
	_ = x[PcT-14]
	_ = x[Pct-15]
	_ = x[PcA-16]
	_ = x[Pca-17]
	_ = x[PcZ-18]
	_ = x[Pcz-19]
	_ = x[PcErr-20]
}

const _PathCmds_name = "PcMPcmPcLPclPcHPchPcVPcvPcCPccPcSPcsPcQPcqPcTPctPcAPcaPcZPczPcErr"

var _PathCmds_index = [...]uint8{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 65}

func (i PathCmds) String() string {
	if i >= PathCmds(len(_PathCmds_index)-1) {
		return "PathCmds(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PathCmds_name[_PathCmds_index[i]:_PathCmds_index[i+1]]
}

func (i *PathCmds) FromString(s string) error {
	for j := 0; j < len(_PathCmds_index)-1; j++ {
		if s == _PathCmds_name[_PathCmds_index[j]:_PathCmds_index[j+1]] {
			*i = PathCmds(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: PathCmds")
}
