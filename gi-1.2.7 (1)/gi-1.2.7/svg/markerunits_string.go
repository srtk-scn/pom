// Code generated by "stringer -type=MarkerUnits"; DO NOT EDIT.

package svg

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StrokeWidth-0]
	_ = x[UserSpaceOnUse-1]
	_ = x[MarkerUnitsN-2]
}

const _MarkerUnits_name = "StrokeWidthUserSpaceOnUseMarkerUnitsN"

var _MarkerUnits_index = [...]uint8{0, 11, 25, 37}

func (i MarkerUnits) String() string {
	if i < 0 || i >= MarkerUnits(len(_MarkerUnits_index)-1) {
		return "MarkerUnits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MarkerUnits_name[_MarkerUnits_index[i]:_MarkerUnits_index[i+1]]
}

func (i *MarkerUnits) FromString(s string) error {
	for j := 0; j < len(_MarkerUnits_index)-1; j++ {
		if s == _MarkerUnits_name[_MarkerUnits_index[j]:_MarkerUnits_index[j+1]] {
			*i = MarkerUnits(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: MarkerUnits")
}
