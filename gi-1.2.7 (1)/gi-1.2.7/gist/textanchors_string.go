// Code generated by "stringer -type=TextAnchors"; DO NOT EDIT.

package gist

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AnchorStart-0]
	_ = x[AnchorMiddle-1]
	_ = x[AnchorEnd-2]
	_ = x[TextAnchorsN-3]
}

const _TextAnchors_name = "AnchorStartAnchorMiddleAnchorEndTextAnchorsN"

var _TextAnchors_index = [...]uint8{0, 11, 23, 32, 44}

func (i TextAnchors) String() string {
	if i < 0 || i >= TextAnchors(len(_TextAnchors_index)-1) {
		return "TextAnchors(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TextAnchors_name[_TextAnchors_index[i]:_TextAnchors_index[i+1]]
}

func (i *TextAnchors) FromString(s string) error {
	for j := 0; j < len(_TextAnchors_index)-1; j++ {
		if s == _TextAnchors_name[_TextAnchors_index[j]:_TextAnchors_index[j+1]] {
			*i = TextAnchors(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: TextAnchors")
}
