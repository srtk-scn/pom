// Code generated by "stringer -type=Types"; DO NOT EDIT.

package gpu

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UndefType-0]
	_ = x[Bool-1]
	_ = x[Int-2]
	_ = x[UInt-3]
	_ = x[Float32-4]
	_ = x[Float64-5]
	_ = x[TypesN-6]
}

const _Types_name = "UndefTypeBoolIntUIntFloat32Float64TypesN"

var _Types_index = [...]uint8{0, 9, 13, 16, 20, 27, 34, 40}

func (i Types) String() string {
	if i < 0 || i >= Types(len(_Types_index)-1) {
		return "Types(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Types_name[_Types_index[i]:_Types_index[i+1]]
}

func (i *Types) FromString(s string) error {
	for j := 0; j < len(_Types_index)-1; j++ {
		if s == _Types_name[_Types_index[j]:_Types_index[j+1]] {
			*i = Types(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Types")
}
