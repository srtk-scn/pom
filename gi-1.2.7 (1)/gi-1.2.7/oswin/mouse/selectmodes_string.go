// Code generated by "stringer -type=SelectModes"; DO NOT EDIT.

package mouse

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SelectOne-0]
	_ = x[ExtendContinuous-1]
	_ = x[ExtendOne-2]
	_ = x[NoSelect-3]
	_ = x[Unselect-4]
	_ = x[SelectQuiet-5]
	_ = x[UnselectQuiet-6]
	_ = x[SelectModesN-7]
}

const _SelectModes_name = "SelectOneExtendContinuousExtendOneNoSelectUnselectSelectQuietUnselectQuietSelectModesN"

var _SelectModes_index = [...]uint8{0, 9, 25, 34, 42, 50, 61, 74, 86}

func (i SelectModes) String() string {
	if i < 0 || i >= SelectModes(len(_SelectModes_index)-1) {
		return "SelectModes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SelectModes_name[_SelectModes_index[i]:_SelectModes_index[i+1]]
}

func (i *SelectModes) FromString(s string) error {
	for j := 0; j < len(_SelectModes_index)-1; j++ {
		if s == _SelectModes_name[_SelectModes_index[j]:_SelectModes_index[j+1]] {
			*i = SelectModes(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: SelectModes")
}
