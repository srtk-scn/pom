// Code generated by "stringer -type=TextFieldStates"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TextFieldActive-0]
	_ = x[TextFieldFocus-1]
	_ = x[TextFieldInactive-2]
	_ = x[TextFieldSel-3]
	_ = x[TextFieldStatesN-4]
}

const _TextFieldStates_name = "TextFieldActiveTextFieldFocusTextFieldInactiveTextFieldSelTextFieldStatesN"

var _TextFieldStates_index = [...]uint8{0, 15, 29, 46, 58, 74}

func (i TextFieldStates) String() string {
	if i < 0 || i >= TextFieldStates(len(_TextFieldStates_index)-1) {
		return "TextFieldStates(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TextFieldStates_name[_TextFieldStates_index[i]:_TextFieldStates_index[i+1]]
}

func (i *TextFieldStates) FromString(s string) error {
	for j := 0; j < len(_TextFieldStates_index)-1; j++ {
		if s == _TextFieldStates_name[_TextFieldStates_index[j]:_TextFieldStates_index[j+1]] {
			*i = TextFieldStates(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: TextFieldStates")
}
