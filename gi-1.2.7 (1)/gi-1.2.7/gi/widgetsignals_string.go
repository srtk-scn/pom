// Code generated by "stringer -type=WidgetSignals"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WidgetSelected-0]
	_ = x[WidgetFocused-1]
	_ = x[WidgetContextMenu-2]
	_ = x[WidgetSignalsN-3]
}

const _WidgetSignals_name = "WidgetSelectedWidgetFocusedWidgetContextMenuWidgetSignalsN"

var _WidgetSignals_index = [...]uint8{0, 14, 27, 44, 58}

func (i WidgetSignals) String() string {
	if i < 0 || i >= WidgetSignals(len(_WidgetSignals_index)-1) {
		return "WidgetSignals(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WidgetSignals_name[_WidgetSignals_index[i]:_WidgetSignals_index[i+1]]
}

func (i *WidgetSignals) FromString(s string) error {
	for j := 0; j < len(_WidgetSignals_index)-1; j++ {
		if s == _WidgetSignals_name[_WidgetSignals_index[j]:_WidgetSignals_index[j+1]] {
			*i = WidgetSignals(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: WidgetSignals")
}
