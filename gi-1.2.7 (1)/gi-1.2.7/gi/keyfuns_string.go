// Code generated by "stringer -type=KeyFuns"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KeyFunNil-0]
	_ = x[KeyFunMoveUp-1]
	_ = x[KeyFunMoveDown-2]
	_ = x[KeyFunMoveRight-3]
	_ = x[KeyFunMoveLeft-4]
	_ = x[KeyFunPageUp-5]
	_ = x[KeyFunPageDown-6]
	_ = x[KeyFunHome-7]
	_ = x[KeyFunEnd-8]
	_ = x[KeyFunDocHome-9]
	_ = x[KeyFunDocEnd-10]
	_ = x[KeyFunWordRight-11]
	_ = x[KeyFunWordLeft-12]
	_ = x[KeyFunFocusNext-13]
	_ = x[KeyFunFocusPrev-14]
	_ = x[KeyFunEnter-15]
	_ = x[KeyFunAccept-16]
	_ = x[KeyFunCancelSelect-17]
	_ = x[KeyFunSelectMode-18]
	_ = x[KeyFunSelectAll-19]
	_ = x[KeyFunAbort-20]
	_ = x[KeyFunCopy-21]
	_ = x[KeyFunCut-22]
	_ = x[KeyFunPaste-23]
	_ = x[KeyFunPasteHist-24]
	_ = x[KeyFunBackspace-25]
	_ = x[KeyFunBackspaceWord-26]
	_ = x[KeyFunDelete-27]
	_ = x[KeyFunDeleteWord-28]
	_ = x[KeyFunKill-29]
	_ = x[KeyFunDuplicate-30]
	_ = x[KeyFunTranspose-31]
	_ = x[KeyFunTransposeWord-32]
	_ = x[KeyFunUndo-33]
	_ = x[KeyFunRedo-34]
	_ = x[KeyFunInsert-35]
	_ = x[KeyFunInsertAfter-36]
	_ = x[KeyFunZoomOut-37]
	_ = x[KeyFunZoomIn-38]
	_ = x[KeyFunPrefs-39]
	_ = x[KeyFunRefresh-40]
	_ = x[KeyFunRecenter-41]
	_ = x[KeyFunComplete-42]
	_ = x[KeyFunLookup-43]
	_ = x[KeyFunSearch-44]
	_ = x[KeyFunFind-45]
	_ = x[KeyFunReplace-46]
	_ = x[KeyFunJump-47]
	_ = x[KeyFunHistPrev-48]
	_ = x[KeyFunHistNext-49]
	_ = x[KeyFunMenu-50]
	_ = x[KeyFunWinFocusNext-51]
	_ = x[KeyFunWinClose-52]
	_ = x[KeyFunWinSnapshot-53]
	_ = x[KeyFunGoGiEditor-54]
	_ = x[KeyFunMenuNew-55]
	_ = x[KeyFunMenuNewAlt1-56]
	_ = x[KeyFunMenuNewAlt2-57]
	_ = x[KeyFunMenuOpen-58]
	_ = x[KeyFunMenuOpenAlt1-59]
	_ = x[KeyFunMenuOpenAlt2-60]
	_ = x[KeyFunMenuSave-61]
	_ = x[KeyFunMenuSaveAs-62]
	_ = x[KeyFunMenuSaveAlt-63]
	_ = x[KeyFunMenuCloseAlt1-64]
	_ = x[KeyFunMenuCloseAlt2-65]
	_ = x[KeyFunsN-66]
}

const _KeyFuns_name = "KeyFunNilKeyFunMoveUpKeyFunMoveDownKeyFunMoveRightKeyFunMoveLeftKeyFunPageUpKeyFunPageDownKeyFunHomeKeyFunEndKeyFunDocHomeKeyFunDocEndKeyFunWordRightKeyFunWordLeftKeyFunFocusNextKeyFunFocusPrevKeyFunEnterKeyFunAcceptKeyFunCancelSelectKeyFunSelectModeKeyFunSelectAllKeyFunAbortKeyFunCopyKeyFunCutKeyFunPasteKeyFunPasteHistKeyFunBackspaceKeyFunBackspaceWordKeyFunDeleteKeyFunDeleteWordKeyFunKillKeyFunDuplicateKeyFunTransposeKeyFunTransposeWordKeyFunUndoKeyFunRedoKeyFunInsertKeyFunInsertAfterKeyFunZoomOutKeyFunZoomInKeyFunPrefsKeyFunRefreshKeyFunRecenterKeyFunCompleteKeyFunLookupKeyFunSearchKeyFunFindKeyFunReplaceKeyFunJumpKeyFunHistPrevKeyFunHistNextKeyFunMenuKeyFunWinFocusNextKeyFunWinCloseKeyFunWinSnapshotKeyFunGoGiEditorKeyFunMenuNewKeyFunMenuNewAlt1KeyFunMenuNewAlt2KeyFunMenuOpenKeyFunMenuOpenAlt1KeyFunMenuOpenAlt2KeyFunMenuSaveKeyFunMenuSaveAsKeyFunMenuSaveAltKeyFunMenuCloseAlt1KeyFunMenuCloseAlt2KeyFunsN"

var _KeyFuns_index = [...]uint16{0, 9, 21, 35, 50, 64, 76, 90, 100, 109, 122, 134, 149, 163, 178, 193, 204, 216, 234, 250, 265, 276, 286, 295, 306, 321, 336, 355, 367, 383, 393, 408, 423, 442, 452, 462, 474, 491, 504, 516, 527, 540, 554, 568, 580, 592, 602, 615, 625, 639, 653, 663, 681, 695, 712, 728, 741, 758, 775, 789, 807, 825, 839, 855, 872, 891, 910, 918}

func (i KeyFuns) String() string {
	if i < 0 || i >= KeyFuns(len(_KeyFuns_index)-1) {
		return "KeyFuns(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _KeyFuns_name[_KeyFuns_index[i]:_KeyFuns_index[i+1]]
}

func (i *KeyFuns) FromString(s string) error {
	for j := 0; j < len(_KeyFuns_index)-1; j++ {
		if s == _KeyFuns_name[_KeyFuns_index[j]:_KeyFuns_index[j+1]] {
			*i = KeyFuns(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: KeyFuns")
}
