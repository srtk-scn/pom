// Code generated by "stringer -type=DNDStages"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DNDNotStarted-0]
	_ = x[DNDStartSent-1]
	_ = x[DNDStarted-2]
	_ = x[DNDDropped-3]
	_ = x[DNDStagesN-4]
}

const _DNDStages_name = "DNDNotStartedDNDStartSentDNDStartedDNDDroppedDNDStagesN"

var _DNDStages_index = [...]uint8{0, 13, 25, 35, 45, 55}

func (i DNDStages) String() string {
	if i < 0 || i >= DNDStages(len(_DNDStages_index)-1) {
		return "DNDStages(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DNDStages_name[_DNDStages_index[i]:_DNDStages_index[i+1]]
}

func (i *DNDStages) FromString(s string) error {
	for j := 0; j < len(_DNDStages_index)-1; j++ {
		if s == _DNDStages_name[_DNDStages_index[j]:_DNDStages_index[j+1]] {
			*i = DNDStages(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: DNDStages")
}
