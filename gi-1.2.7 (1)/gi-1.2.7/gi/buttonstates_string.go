// Code generated by "stringer -type=ButtonStates"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ButtonActive-0]
	_ = x[ButtonInactive-1]
	_ = x[ButtonHover-2]
	_ = x[ButtonFocus-3]
	_ = x[ButtonDown-4]
	_ = x[ButtonSelected-5]
	_ = x[ButtonStatesN-6]
}

const _ButtonStates_name = "ButtonActiveButtonInactiveButtonHoverButtonFocusButtonDownButtonSelectedButtonStatesN"

var _ButtonStates_index = [...]uint8{0, 12, 26, 37, 48, 58, 72, 85}

func (i ButtonStates) String() string {
	if i < 0 || i >= ButtonStates(len(_ButtonStates_index)-1) {
		return "ButtonStates(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ButtonStates_name[_ButtonStates_index[i]:_ButtonStates_index[i+1]]
}

func (i *ButtonStates) FromString(s string) error {
	for j := 0; j < len(_ButtonStates_index)-1; j++ {
		if s == _ButtonStates_name[_ButtonStates_index[j]:_ButtonStates_index[j+1]] {
			*i = ButtonStates(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: ButtonStates")
}
