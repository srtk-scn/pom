// Code generated by "stringer -type=SliderStates"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SliderActive-0]
	_ = x[SliderInactive-1]
	_ = x[SliderHover-2]
	_ = x[SliderFocus-3]
	_ = x[SliderDown-4]
	_ = x[SliderValue-5]
	_ = x[SliderBox-6]
	_ = x[SliderStatesN-7]
}

const _SliderStates_name = "SliderActiveSliderInactiveSliderHoverSliderFocusSliderDownSliderValueSliderBoxSliderStatesN"

var _SliderStates_index = [...]uint8{0, 12, 26, 37, 48, 58, 69, 78, 91}

func (i SliderStates) String() string {
	if i < 0 || i >= SliderStates(len(_SliderStates_index)-1) {
		return "SliderStates(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SliderStates_name[_SliderStates_index[i]:_SliderStates_index[i+1]]
}

func (i *SliderStates) FromString(s string) error {
	for j := 0; j < len(_SliderStates_index)-1; j++ {
		if s == _SliderStates_name[_SliderStates_index[j]:_SliderStates_index[j+1]] {
			*i = SliderStates(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: SliderStates")
}
