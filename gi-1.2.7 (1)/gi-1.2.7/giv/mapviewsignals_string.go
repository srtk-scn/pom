// Code generated by "stringer -type=MapViewSignals"; DO NOT EDIT.

package giv

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MapViewDoubleClicked-0]
	_ = x[MapViewAdded-1]
	_ = x[MapViewDeleted-2]
	_ = x[MapViewSignalsN-3]
}

const _MapViewSignals_name = "MapViewDoubleClickedMapViewAddedMapViewDeletedMapViewSignalsN"

var _MapViewSignals_index = [...]uint8{0, 20, 32, 46, 61}

func (i MapViewSignals) String() string {
	if i < 0 || i >= MapViewSignals(len(_MapViewSignals_index)-1) {
		return "MapViewSignals(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MapViewSignals_name[_MapViewSignals_index[i]:_MapViewSignals_index[i+1]]
}

func (i *MapViewSignals) FromString(s string) error {
	for j := 0; j < len(_MapViewSignals_index)-1; j++ {
		if s == _MapViewSignals_name[_MapViewSignals_index[j]:_MapViewSignals_index[j+1]] {
			*i = MapViewSignals(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: MapViewSignals")
}
