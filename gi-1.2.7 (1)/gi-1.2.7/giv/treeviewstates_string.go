// Code generated by "stringer -type=TreeViewStates"; DO NOT EDIT.

package giv

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TreeViewActive-0]
	_ = x[TreeViewSel-1]
	_ = x[TreeViewFocus-2]
	_ = x[TreeViewInactive-3]
	_ = x[TreeViewStatesN-4]
}

const _TreeViewStates_name = "TreeViewActiveTreeViewSelTreeViewFocusTreeViewInactiveTreeViewStatesN"

var _TreeViewStates_index = [...]uint8{0, 14, 25, 38, 54, 69}

func (i TreeViewStates) String() string {
	if i < 0 || i >= TreeViewStates(len(_TreeViewStates_index)-1) {
		return "TreeViewStates(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TreeViewStates_name[_TreeViewStates_index[i]:_TreeViewStates_index[i+1]]
}

func (i *TreeViewStates) FromString(s string) error {
	for j := 0; j < len(_TreeViewStates_index)-1; j++ {
		if s == _TreeViewStates_name[_TreeViewStates_index[j]:_TreeViewStates_index[j+1]] {
			*i = TreeViewStates(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: TreeViewStates")
}
