// Code generated by "stringer -type=DirFlags"; DO NOT EDIT.

package giv

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DirMark-0]
	_ = x[DirIsOpen-1]
	_ = x[DirSortByName-2]
	_ = x[DirSortByModTime-3]
	_ = x[DirFlagsN-4]
}

const _DirFlags_name = "DirMarkDirIsOpenDirSortByNameDirSortByModTimeDirFlagsN"

var _DirFlags_index = [...]uint8{0, 7, 16, 29, 45, 54}

func (i DirFlags) String() string {
	if i < 0 || i >= DirFlags(len(_DirFlags_index)-1) {
		return "DirFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DirFlags_name[_DirFlags_index[i]:_DirFlags_index[i+1]]
}

func (i *DirFlags) FromString(s string) error {
	for j := 0; j < len(_DirFlags_index)-1; j++ {
		if s == _DirFlags_name[_DirFlags_index[j]:_DirFlags_index[j+1]] {
			*i = DirFlags(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: DirFlags")
}
